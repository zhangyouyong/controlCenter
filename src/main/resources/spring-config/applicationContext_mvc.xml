<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation=" 
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-4.0.xsd 
           http://www.springframework.org/schema/mvc 
           http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
           http://www.springframework.org/schema/task  
		   http://www.springframework.org/schema/task/spring-task-4.0.xsd"
	default-autowire="byName" >
	
	<!-- ①：对mvc包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.bh.controller" />
	<mvc:annotation-driven/>
	<!-- <bean name="ParseJsonHandle" class="com.shuyin.filter.ParseJsonHandle"></bean>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">    
	    <property name="interceptors">    
	        <list>    
	            <ref bean="ParseJsonHandle"/>    
	        </list>    
	    </property>    
	</bean>  -->
	<mvc:interceptors>
		<!-- <bean class="com.bh.interceptor.TokenInterceptor"/> -->
		<mvc:interceptor>
				<mvc:mapping path="/*/*"/>
				<mvc:exclude-mapping path="/login/login.do"/>
				<mvc:exclude-mapping path="/Account/userInfo"/>
				<bean class="com.bh.interceptor.TokenInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 处理方法级别上的@RequestMapping注解 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
		<!-- 配置一下对json数据的转换 -->
		<property name="messageConverters">
			<list>
				<bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
			        <property name="supportedMediaTypes">
			            <list>
			                <value>application/json;charset=UTF-8</value>
			                <value>application/html;charset=UTF-8</value>
			            </list>
			        </property>
			    </bean>				    
			</list>
		</property>
		<!-- @Controller 注入bean参数注解支持 -->
		<property name="webBindingInitializer">  
		    <bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">  
		        <property name="conversionService"> 
		            <bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean"></bean>  
		        </property>  
		    </bean>  
		</property>  
	</bean>	
	<mvc:resources location="/WEB-INF/image/" mapping="/image/**"/>
	<!-- <mvc:resources location="/resource/" mapping="/resource/**"  /> -->
		<!-- ③：对模型视图名称的解析，即在模型视图名称添加前后缀  -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑  --> 
	</bean>

	
	<!-- 文件上传配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件大小的参数 -->
		<property name="maxUploadSize" value="50000000" /> 
		<property name="maxInMemorySize" value="4096" />  
	</bean>
	
</beans> 