<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userGroupRelation">
	<!-- 根据组解除用户绑定 -->
	<delete id="userGroupRemove" parameterType="com.bh.model.UserGropRelationModel">
		delete from user_group_relation where user_id in
		<foreach collection="userIds" item="userId" open="(" separator="," close=")">
			#{userId}
		</foreach>
		and group_id=#{groupId}
	</delete>
	<delete id="userGroupRemoveByUserId" parameterType="com.bh.model.UserRelevanceGroupModel">
		delete from user_group_relation where group_id in
		<foreach collection="groupIds" item="groupId" open="(" separator="," close=")">
			#{groupId}
		</foreach>
		and user_id=#{userId}
	</delete>
	<!-- 组关联多个用户 -->
	<insert id="insertUserGroup" parameterType="com.bh.model.UserGropRelationModel">
		insert into user_group_relation(user_id,group_id,cread_time) values 
		<foreach collection="userIds" item="userId"  separator="," >
			(#{userId},#{groupId},now())
		</foreach>
	</insert>
	<!-- 用户关联多个组 -->
	<insert id="userRelevanceGroup" parameterType="com.bh.model.UserRelevanceGroupModel">
		insert into user_group_relation(user_id,group_id,cread_time) values 
		<foreach collection="groupIds" item="groupId"  separator="," >
			(#{userId},#{groupId},now())
		</foreach>
	</insert>
	<select id="groupSelectUser" parameterType="java.lang.Long" resultType="map">
		SELECT
			bu.login_name userName,
			bu.userid subUserId
		FROM
			user_group_relation ugr,
			base_user bu,
			user_group ug
		WHERE
			ugr.group_id = ug.id
		AND ugr.user_id = bu.userid
		AND bu.`status` = 1 
		AND ug.id=#{userGroupId}
	</select>
	
	<select id="groupNoSelectUser" parameterType="map" resultType="map">
		SELECT
			bu.userid,bu.`name`,bu.login_name userName from base_user bu where bu.user_parent=#{loginUserId}
		and  NOT EXISTS (
			SELECT
				1
			FROM
				user_group_relation ugr
			WHERE
				bu.userid = ugr.user_id
			AND group_id=#{userGroupId}
		)
	</select>
	<select id="userSelectGroup" parameterType="Long" resultType="map">
		SELECT
			ug.`name` groupName,
			ug.id groupId
		FROM
			user_group_relation ugr,
			user_group ug
		WHERE
			ugr.group_id = ug.id
		and
			ugr.user_id = #{userId}
	</select>
	
	<select id="userNoSelectGroup" parameterType="map" resultType="map">
		SELECT
			ug.id groupId,
			ug.`name` groupName
		FROM
			user_group ug 
			where ug.cread_by=#{loginUserId}
		and
			NOT EXISTS (
				SELECT
					1
				FROM
					user_group_relation ugr
				WHERE
					ug.id = ugr.group_id
				and
					ugr.user_id = #{userId})
	</select>
</mapper>